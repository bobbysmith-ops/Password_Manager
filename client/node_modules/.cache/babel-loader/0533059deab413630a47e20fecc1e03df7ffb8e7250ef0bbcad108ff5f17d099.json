{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobby Smith\\\\Desktop\\\\learncoding local\\\\password_manager\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [title, setTitle] = useState('');\n  const [passwordList, setPasswordList] = useState([]); //array containing ALL the different passwords we have in our database\n\n  //add an empty array to say we only want useEffect to be called when the whole page re-renders\n  useEffect(() => {\n    Axios.get('http://localhost:3001/showpasswords').then(response => {\n      //console.log(response.data);\n      setPasswordList(response.data);\n    });\n  }, []);\n  const addPassword = () => {\n    Axios.post('http://localhost:3001/addpassword', {\n      password: password,\n      title: title\n    });\n  };\n  const decryptPassword = encryption => {\n    Axios.post(\"http://localhost:3001/decryptpassword\", {\n      password: encryption.password,\n      iv: encryption.iv,\n      id: val.id\n    }).then(response => {\n      console.log(response.data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AddingPassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ex. password123\",\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ex. Facebook\",\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPassword,\n        children: \" Add Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Passwords\",\n      children: passwordList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          onClick: () => {\n            decryptPassword({\n              password: val.password,\n              iv: val.iv\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: val.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o3mBxwnN1LgBNumPv/60JaENc8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Axios","jsxDEV","_jsxDEV","App","_s","password","setPassword","title","setTitle","passwordList","setPasswordList","get","then","response","data","addPassword","post","decryptPassword","encryption","iv","id","val","console","log","className","children","type","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Bobby Smith/Desktop/learncoding local/password_manager/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from 'axios';\n\n\nfunction App() {\n\n  const [password, setPassword] = useState('');\n  const [title, setTitle] = useState('');\n\n  const [passwordList, setPasswordList] = useState([])//array containing ALL the different passwords we have in our database\n\n  //add an empty array to say we only want useEffect to be called when the whole page re-renders\n  useEffect(()=>{\n    Axios.get('http://localhost:3001/showpasswords').then((response)=>{\n      //console.log(response.data);\n      setPasswordList(response.data)\n    })\n  }, [])\n\n\n  const addPassword = () => {\n    Axios.post('http://localhost:3001/addpassword', {\n      password: password,\n      title: title,\n    });\n  };\n\n  const decryptPassword = (encryption) => {\n    Axios.post(\"http://localhost:3001/decryptpassword\", {password: encryption.password, iv: encryption.iv, id: val.id})\n  .then((response)=>{\n    console.log(response.data);\n  })\n};\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"AddingPassword\">\n        <input type=\"text\" placeholder=\"Ex. password123\" onChange={(event)=>{setPassword(event.target.value)}}/>\n        <input type=\"text\" placeholder=\"Ex. Facebook\" onChange={(event)=>{setTitle(event.target.value)}}/>\n\n        <button onClick={addPassword}> Add Password </button>\n\n      </div>\n\n      <div className=\"Passwords\">\n        {passwordList.map((val)=>{\n          return (\n          <div className=\"password\" onClick={()=>{decryptPassword({password: val.password, iv: val.iv})}}>\n            <h3>{val.title}</h3>\n          </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}